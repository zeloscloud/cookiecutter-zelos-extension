[project]
name = "{{cookiecutter.project_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">={{cookiecutter.python_version}}"
keywords = ["zelos", "extension"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "zelos-sdk>=0.0.6",
]

[project.urls]
Homepage = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Issues = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}/issues"
Documentation = "https://docs.zeloscloud.io/extensions"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pre-commit>=4.3.0",
    "ruff>=0.13.3",
    "tomli>=2.0.0; python_version < '3.11'",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/{{cookiecutter.project_slug}}"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--log-cli-level=INFO"

[tool.ruff]
target-version = "py{{cookiecutter.python_version|replace('.', '')}}"
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "B008",   # function call in defaults (common in decorators)
]

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = ["PTH123"]  # Allow open() in scripts

[tool.ruff.lint.pydocstyle]
convention = "google"
